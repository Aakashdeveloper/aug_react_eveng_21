https://code.visualstudio.com/download
https://nodejs.org/en/
https://github.com/
https://github.com/Aakashdeveloper
https://github.com/Aakashdeveloper/aug_react_eveng_21
https://git-scm.com/downloads

vs code extensions
> vscode-icons
> tabnine
> auto close tag
> git lens
> git history

Npm
React = 3
Mock API
json-server
Github
Depolyment
-> MERN
-> heroku
-> Aws
-> Docker
-> Nginx
React-JWT(Login Logout)-2


React_hooks -1
React-GraphQL-1
HOC
Basic React Native=1
React-Redux =1
React-Redux =1

///////Walkthrough///////
React-Saga -1
React-with-typescript-1
Testing Jest Enzime
--------NOT Backend--------------
API
GraphQL
Login/Logout

>>>>>>>>
React is frontend library or framework which help to build
single page application using component base structure
>>>>>

For data interaction we need backend api that expose JSON data

Open source > anybody can contribute in development

npm > Node Package manager

JSON > JavaScript Object Notation
[
    {
        id:1,
        name:'John',
        city:'Delhi'
    },
    {
        id:2,
        name:'Bhumika',
        city:'Paris'
    },
    {
        id:3,
        name:'Keev'
    }
]

package.json
> start point to application
> script to start,test,build
> what all packages you are using
> meta data (about the application> description,version,name)

//// step to generate package.json //// 
> open the cmd
> navigate to the folder using cmd
> npm init 
> answer all question
> type "yes"

//// step to install package //// 
> open the cmd
> navigate to the folder using cmd
> npm i packagename

///Step to generate React App////
#window

>>>>one time step<<<<<
> open cmd as administrator
> npm i -g create-react-app

>>>>next every time you need new react app<<<<<
> open cmd
> navigate to the folder
> create-react-app appname


## mac/linux

>>>>one time step<<<<<
> open terminal
> sudo npm i -g create-react-app

>>>>next every time you need new react app<<<<<
> open terminal
> navigate to the folder
> create-react-app appname

#### office ####
> open cmd
> navigate to the folder
> npx create-react-app appname


///Step to run React App////
> open cmd
> navigate to the folder
> npm start
> localhost:3000

//es5
function add(a,b){
    return a+b
}

add(1,2)

//es6
const add = (a,b) => {
    return a+b
}

add(1,2)


function add(a,b){
    var out = [a,b]
    return out
}

add(1,2)
[1,2]

//html
inline > that start in same line
block > always start from new line


///
inline
styleTags
stylesheet

h1

inline
h1{
    color:red;
    text-align:center
}

styletag
h1{
    color:orange;
    font-size:30px;
}

stylesheet
h1{
    font-size:40px;
    text-align:right;
    margin-top:1%
}


inline > styletag > stylesheet

h1{
    color:red;
    text-align:center;
    font-size:30px;
    margin-top:1%
}

tagName > h1 ,p
class> . when we have to target multiple element with same property
id> # when we have to target unique element
solid
dotted
double
groove
dashed


bootstrap3

xs < 768
sm > 768
md > 992
lg > 1200

bootstrap4
col- < 576
sm >576
md > 768
lg >992
xl>1200

bootstrap5
xs < 576
sm >576
md >768
lg >992
xl >1200
xxl>1400

///////////
functional
> Dumb Components
> Use to display or render
> it cannot maintain state

class
> Logical Component
> we can maintain state 
> we use to interact with data/ apicall / event as well as display
> Any data intercation should happen through state only


hooks

///////////
state
> act like local variables
> Any data interaction should happen through state only
> Scope of state will be inside one component
> mutable we can update the value of state

props
> props help to transfer data from one component to other
> immutable we cannot update the value of props
> it can only transfer data between nested component


// JavaScript
map
Filter
indexOf

var a = [1,2,3,4]
a.map((data) =>  {console.log(data)})

a.map((data) =>  {console.log(data*2)})

a.map((data) =>  {return data*2})
[2, 4, 6, 8]


var a = [1,2,3,4,8,5,7,3,9,1,5]
a.filter((data) => {return data>4})
[8, 5, 7, 9, 5]

var city = ["Delhi","Mumbai","Pune","London"]
undefined
city.indexOf('Delhi')
0
city.indexOf('Pune')
2
city.indexOf('Amsterdam')
-1
city.indexOf('Helsinki')
-1

parent => child (props)
child => parent (props with function)


//parent
function add(a,b){
    return a+b
}

// child
add(1,2)

params 
> complusory
> we need to define in routing first
> go after /

queryParams
> optional
> no need to define in routing
> go after ?

// default props
history > use for the redirection
location > for the query params
match > for params
** in child component we will not get the default props


var a = "?page=1"
undefined
a.split('=')
(2) ['?page', '1']
a.split('=')[1]
'1'

var a = "?page=1&category=mobile"
var b = a.split('&')
b
(2) ['?page=1', 'category=mobile']

b[0].split('=')[1]
'1'
b[1].split('=')[1]
'mobile'


(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

//payment gateway url
https://developerpayment.herokuapp.com/paynow

/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}

https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps


///// string literal//////
var a = 10
var b = "My age is "+a;
//es5
"My age is 10"

var c = `My age is ${a}`
"My age is 10"

/// dummy api///
npm i -g json-server

json-server --watch booking.json --port 7601


var data = "status=TXN_SUCCESS&ORDERID=TEST_41874&date=2021-09-27%2019:28:24.0&bank=ICICI%20Bank"
undefined
data.split('&')
(4) ['status=TXN_SUCCESS', 'ORDERID=TEST_41874', 'date=2021-09-27%2019:28:24.0', 'bank=ICICI%20Bank']
var myarray = data.split('&')

myarray[0].split('=')[1]
'TXN_SUCCESS'
myarray[1].split('=')[1]
'TEST_41874'
myarray[2].split('=')[1]
'2021-09-27%2019:28:24.0'
myarray[3].split('=')[1]
'ICICI%20Bank'
myarray[1].split('=')[1].split('_')
(2) ['TEST', '41874']
myarray[1].split('=')[1].split('_')[1]
'41874'